<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>3-1.7.5b.html</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="SynEdit HTML exporter" />
<style type="text/css">
<!--
body { color: #000000; background-color: #FFFFFF; }
.cpp1-assembler { color: #0000FF; }
.cpp1-character { color: #000000; }
.cpp1-comment { color: #3399FF; font-style: italic; }
.cpp1-float { color: #800080; }
.cpp1-hexadecimal { color: #800080; }
.cpp1-identifier { color: #000000; }
.cpp1-illegalchar { color: #000000; }
.cpp1-number { color: #800080; }
.cpp1-octal { color: #800080; }
.cpp1-preprocessor { color: #008000; }
.cpp1-reservedword { color: #000000; font-weight: bold; }
.cpp1-space { background-color: #FFFFFF; color: #000000; }
.cpp1-string { color: #0000FF; font-weight: bold; }
.cpp1-symbol { color: #FF0000; font-weight: bold; }
-->
</style>
</head>
<body>
<pre>
<code><span style="font: 9pt Consolas;"><span class="cpp1-preprocessor">#include&lt;stdio.h&gt; 
#include&lt;stdlib.h&gt;
#include &lt;conio.h&gt;

</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> first</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">void</span><span class="cpp1-symbol">);
</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> about</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">void</span><span class="cpp1-symbol">);
</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> talk</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">void</span><span class="cpp1-symbol">);
</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> win</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">void</span><span class="cpp1-symbol">);
</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> m_key</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> m_key_n</span><span class="cpp1-symbol">);



</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> main</span><span class="cpp1-symbol">()
{
</span><span class="cpp1-space">	first</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">	</span><span class="cpp1-reservedword">while</span><span class="cpp1-symbol">(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	</span><span class="cpp1-symbol">{</span><span class="cpp1-space">					
    	</span><span class="cpp1-comment">/*&plusmn;&ecirc;&Igrave;&acirc;&raquo;­Ã&aelig;&sup3;&otilde;&Ecirc;&frac14;&raquo;&macr;*/
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">char</span><span class="cpp1-space"> first_a</span><span class="cpp1-symbol">=</span><span class="cpp1-character">'0'</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">start_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> first_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">first_n_b</span><span class="cpp1-symbol">=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">first_f</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> first_s</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	
    	</span><span class="cpp1-comment">/*&plusmn;&ecirc;&Igrave;&acirc;&raquo;­Ã&aelig;&Ouml;&divide&sup3;&Igrave;&Ecirc;&frac12;*/</span><span class="cpp1-space"> 
    	</span><span class="cpp1-reservedword">while</span><span class="cpp1-symbol">(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    		</span><span class="cpp1-reservedword">while</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">first_f</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">        		system</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;cls&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		</span><span class="cpp1-reservedword">switch</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">first_a</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 'w'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    	    			first_n</span><span class="cpp1-symbol">--;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">            		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 's'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">    	    		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			first_n</span><span class="cpp1-symbol">++;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 'j'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;\a&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">						</span><span class="cpp1-reservedword">switch</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">first_n</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	        			</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">1</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">start_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">2</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">about</span><span class="cpp1-symbol">();</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">3</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">talk</span><span class="cpp1-symbol">();</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">4</span><span class="cpp1-symbol">:</span><span class="cpp1-reservedword">return</span><span class="cpp1-space"> </span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">default</span><span class="cpp1-symbol">:</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    				</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    				</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    			</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">default</span><span class="cpp1-symbol">:</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        	
	        	</span><span class="cpp1-comment">/*&Oacute;&Icirc;&Iuml;&middot;&iquest;&ordf;&Ecirc;&frac14;&Auml;&pound;&iquest;&eacute;1*/
</span><span class="cpp1-space">    	    	</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">start_n</span><span class="cpp1-symbol">==</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">					</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">				</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        	
				</span><span class="cpp1-comment">/*&sup1;&acirc;&plusmn;&ecirc;&Ograve;&AElig;¶¯&plusmn;&szlig;&Ocirc;&micro;&Aring;&ETH;¶¨*/
</span><span class="cpp1-space">				first_a</span><span class="cpp1-symbol">=</span><span class="cpp1-character">'0'</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        	</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">first_n</span><span class="cpp1-symbol">&lt;</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        		first_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    		</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">first_n</span><span class="cpp1-symbol">&gt;</span><span class="cpp1-number">4</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	    		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	    			first_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">4</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    		
	    		</span><span class="cpp1-comment">/*&Ouml;&divide&sup2;&Euml;&micro;&yen;&Iuml;&Ocirc;&Ecirc;&frac34;&Auml;&pound;&iquest;&eacute;*/</span><span class="cpp1-space"> 
	    		m_key</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">first_n</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		
	    		
	        	</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">kbhit</span><span class="cpp1-symbol">())
</span><span class="cpp1-space">    	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    		    	first_a</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">getch</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">    	    		first_f</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	    	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">    			first_f</span><span class="cpp1-symbol">++;
</span><span class="cpp1-space">    		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        </span><span class="cpp1-comment">/*&Oacute;&Icirc;&Iuml;&middot;&iquest;&ordf;&Ecirc;&frac14;&Auml;&pound;&iquest;&eacute;2*/
</span><span class="cpp1-space">    	    </span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">start_n</span><span class="cpp1-symbol">==</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	    </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">				start_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">				</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">			</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">			
			</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">kbhit</span><span class="cpp1-symbol">())
</span><span class="cpp1-space">    	    </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    		   	first_a</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">getch</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">    	    	first_f</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	    </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">			</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">first_s</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">			</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">				first_s</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">				</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">			</span><span class="cpp1-symbol">}</span><span class="cpp1-space">	
    	</span><span class="cpp1-symbol">}</span><span class="cpp1-space"> 

    	</span><span class="cpp1-comment">/*&Oacute;&Icirc;&Iuml;&middot;&sup3;&Igrave;&Ecirc;&frac12;&sup3;&otilde;&Ecirc;&frac14;&raquo;&macr;*/
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">register</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">char</span><span class="cpp1-space"> a</span><span class="cpp1-symbol">=</span><span class="cpp1-character">'0'</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">static</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> dbug</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> break_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> o_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">s_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">register</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> i</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">j</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">u</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">xb</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">=</span><span class="cpp1-number">21</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">yb</span><span class="cpp1-symbol">=</span><span class="cpp1-number">21</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">pd</span><span class="cpp1-symbol">=</span><span class="cpp1-number">12</span><span class="cpp1-symbol">;</span><span class="cpp1-space"> 
    	</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> io</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">jo</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">register</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> shape</span><span class="cpp1-symbol">[</span><span class="cpp1-number">25</span><span class="cpp1-symbol">][</span><span class="cpp1-number">25</span><span class="cpp1-symbol">]={
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">7</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">7</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">6</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">6</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">7</span><span class="cpp1-symbol">,</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">6</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">6</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">9</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">5</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">6</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">8</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">11</span><span class="cpp1-symbol">},
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">7</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">7</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">,</span><span class="cpp1-number">4</span><span class="cpp1-symbol">,</span><span class="cpp1-number">10</span><span class="cpp1-symbol">,</span><span class="cpp1-number">3</span><span class="cpp1-symbol">}}</span><span class="cpp1-space"> </span><span class="cpp1-symbol">;</span><span class="cpp1-comment">//&Iacute;&frac14;&ETH;&Icirc;&Ecirc;&yacute;&times;&eacute; 
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">register</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> shape_b</span><span class="cpp1-symbol">[</span><span class="cpp1-number">25</span><span class="cpp1-symbol">][</span><span class="cpp1-number">25</span><span class="cpp1-symbol">];
</span><span class="cpp1-space">        </span><span class="cpp1-reservedword">register</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> object_b</span><span class="cpp1-symbol">[</span><span class="cpp1-number">3</span><span class="cpp1-symbol">][</span><span class="cpp1-number">2</span><span class="cpp1-symbol">]={{</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">9</span><span class="cpp1-symbol">},{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">14</span><span class="cpp1-symbol">},{</span><span class="cpp1-number">23</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">}};
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">register</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> object</span><span class="cpp1-symbol">[</span><span class="cpp1-number">3</span><span class="cpp1-symbol">][</span><span class="cpp1-number">2</span><span class="cpp1-symbol">]={{</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">9</span><span class="cpp1-symbol">},{</span><span class="cpp1-number">11</span><span class="cpp1-symbol">,</span><span class="cpp1-number">14</span><span class="cpp1-symbol">},{</span><span class="cpp1-number">23</span><span class="cpp1-symbol">,</span><span class="cpp1-number">2</span><span class="cpp1-symbol">}};
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">register</span><span class="cpp1-space"> </span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> key</span><span class="cpp1-symbol">[</span><span class="cpp1-number">3</span><span class="cpp1-symbol">][</span><span class="cpp1-number">2</span><span class="cpp1-symbol">]={{</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-number">8</span><span class="cpp1-symbol">},{</span><span class="cpp1-number">12</span><span class="cpp1-symbol">,</span><span class="cpp1-number">14</span><span class="cpp1-symbol">},{</span><span class="cpp1-number">23</span><span class="cpp1-symbol">,</span><span class="cpp1-number">23</span><span class="cpp1-symbol">}},</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-number">3</span><span class="cpp1-symbol">]={</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">},</span><span class="cpp1-identifier">key_num</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">key_num_b</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> ik</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;

</span><span class="cpp1-space">    	</span><span class="cpp1-comment">/*&Oacute;&Icirc;&Iuml;&middot;&Ouml;&divide&Ntilde;­»&middot;*/</span><span class="cpp1-space"> 
    	</span><span class="cpp1-reservedword">while</span><span class="cpp1-symbol">(</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">        	</span><span class="cpp1-reservedword">while</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">s_n</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">)</span><span class="cpp1-comment">//&Euml;&cent;&ETH;&Acirc;&Ntilde;­»&middot; 
</span><span class="cpp1-space">        	</span><span class="cpp1-symbol">{</span><span class="cpp1-space">		
        		system</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;cls&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">        		</span><span class="cpp1-comment">/*&sup3;&otilde;&times;&acute;&Igrave;&shy;&acute;&cent;&acute;&aelig;*/</span><span class="cpp1-space"> 
        		xb</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">        		yb</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        	</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    	    		object_b</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]=</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">];
</span><span class="cpp1-space">    	    		object_b</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]=</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">];
</span><span class="cpp1-space">        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">		
        		</span><span class="cpp1-comment">/*&Ouml;&divide¶¯&Ocirc;&Euml;¶¯&frac14;&AElig;&Euml;&atilde;&Auml;&pound;&iquest;&eacute;*/</span><span class="cpp1-space"> 
        		</span><span class="cpp1-reservedword">switch</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">a</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">        			</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 'w'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">        				y</span><span class="cpp1-symbol">--;</span><span class="cpp1-identifier">pd</span><span class="cpp1-symbol">=</span><span class="cpp1-number">12</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">            		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 's'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">        			</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			y</span><span class="cpp1-symbol">++;</span><span class="cpp1-identifier">pd</span><span class="cpp1-symbol">=</span><span class="cpp1-number">13</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    	    	</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 'a'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			x</span><span class="cpp1-symbol">--;</span><span class="cpp1-identifier">pd</span><span class="cpp1-symbol">=</span><span class="cpp1-number">14</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 'd'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			x</span><span class="cpp1-symbol">++;</span><span class="cpp1-identifier">pd</span><span class="cpp1-symbol">=</span><span class="cpp1-number">15</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> 'k'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			break_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">					</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> '1'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			dbug</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">dbug</span><span class="cpp1-symbol">==</span><span class="cpp1-number">1</span><span class="cpp1-symbol">?</span><span class="cpp1-number">0</span><span class="cpp1-symbol">:</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> '2'</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			dbug</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">dbug</span><span class="cpp1-symbol">==</span><span class="cpp1-number">2</span><span class="cpp1-symbol">?</span><span class="cpp1-number">0</span><span class="cpp1-symbol">:</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">					</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">default</span><span class="cpp1-symbol">:</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">    	    	
				</span><span class="cpp1-comment">/*&Oacute;&Icirc;&Iuml;&middot;&Iacute;&Euml;&sup3;&ouml;&Auml;&pound;&iquest;&eacute;1*/
</span><span class="cpp1-space">    	    	</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">break_n</span><span class="cpp1-symbol">==</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">					</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">				</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">		
	        	</span><span class="cpp1-comment">/*&plusmn;&raquo;¶¯&Ocirc;&Euml;¶¯&frac14;&AElig;&Euml;&atilde;&Auml;&pound;&iquest;&eacute;*/</span><span class="cpp1-space"> 
	        	x</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">?:</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            x</span><span class="cpp1-symbol">&gt;=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">?:</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            y</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">?:</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            y</span><span class="cpp1-symbol">&gt;=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">?:</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            </span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">]!=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">&amp;&amp;</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">]!=-</span><span class="cpp1-number">1</span><span class="cpp1-symbol">&amp;&amp;</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">]!=-</span><span class="cpp1-number">2</span><span class="cpp1-symbol">&amp;&amp;</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">]!=-</span><span class="cpp1-number">3</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	        </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    	        	x</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">xb</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            	y</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">yb</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">    	    	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    
        		</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">    	        </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">==</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]&amp;&amp;</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">==</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">])
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]+=</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">-</span><span class="cpp1-identifier">xb</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">        				object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]+=</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">-</span><span class="cpp1-identifier">yb</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        			o_n</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	            </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	            </span><span class="cpp1-reservedword">if</span><span class="cpp1-space"> </span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">!=-</span><span class="cpp1-number">1</span><span class="cpp1-symbol">&amp;&amp;</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]!=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">&amp;&amp;</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]!=-</span><span class="cpp1-number">3</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">        	    </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	            	x</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">xb</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            	y</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">yb</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	            	object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]=</span><span class="cpp1-identifier">object_b</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">];
</span><span class="cpp1-space">	            	object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]=</span><span class="cpp1-identifier">object_b</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">o_n</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">];
</span><span class="cpp1-space">	        		o_n</span><span class="cpp1-symbol">=-</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-space">	    	
	        	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    	   
	            </span><span class="cpp1-comment">/*&times;&oslash;&plusmn;&ecirc;&times;&deg;&Ocirc;&Oslash;&Ouml;&Aacute;&Iacute;&frac14;&ETH;&Icirc;&Ecirc;&yacute;&times;&eacute;*/</span><span class="cpp1-space"> 
        		</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        		shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">object_b</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">object_b</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        		shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]=-</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">}</span><span class="cpp1-space"> 
	        	</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">++)</span><span class="cpp1-comment">//&plusmn;&raquo;&Otilde;&frac14;&frac34;&Yacute;&Aring;&ETH;¶¨&micro;&atilde;&Aring;&ETH;¶¨ 
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        		</span><span class="cpp1-reservedword">switch</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]])
</span><span class="cpp1-space">	        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        			</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">0</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]=-</span><span class="cpp1-number">3</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">]=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-symbol">-</span><span class="cpp1-number">1</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]=-</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">]=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-symbol">-</span><span class="cpp1-number">2</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]=-</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">]=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-symbol">-</span><span class="cpp1-number">3</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]][</span><span class="cpp1-identifier">key</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]]=-</span><span class="cpp1-number">3</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">]=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        			</span><span class="cpp1-reservedword">default</span><span class="cpp1-symbol">:</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    		shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">yb</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">xb</span><span class="cpp1-symbol">]=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        	shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">]=</span><span class="cpp1-identifier">pd</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    	
	    		</span><span class="cpp1-comment">/*&plusmn;&raquo;&Otilde;&frac14;&frac34;&Yacute;&Aring;&ETH;¶¨&micro;&atilde;&frac14;&Ccedil;&Acirc;&frac14;*/</span><span class="cpp1-space"> 
	    		key_num</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    		</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">	    		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	    			</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">ik</span><span class="cpp1-symbol">]==</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	    			</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	    				key_num</span><span class="cpp1-symbol">++;
</span><span class="cpp1-space">	    			</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    		</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    		</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">key_num_b</span><span class="cpp1-symbol">!=</span><span class="cpp1-identifier">key_num</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	    		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;\a&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    		key_num_b</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">key_num</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">			 


    	    	</span><span class="cpp1-comment">/*&AElig;&Aacute;&Auml;&raquo;&Eacute;&uml;&Atilde;&egrave;*/</span><span class="cpp1-space"> 
	        	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	        	</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">u</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">u</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">u</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&curren;&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">    	    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-space">		
    	    	</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">j</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">j</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">j</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">    		    </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	    	    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-space">			
	    	    	</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">i</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">i</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">i</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">	    	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	    	    		</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">dbug</span><span class="cpp1-symbol">==</span><span class="cpp1-number">2</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">	    	    		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	    	    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;%-2d&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">j</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">i</span><span class="cpp1-symbol">]);
</span><span class="cpp1-space">						</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">						</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">dbug</span><span class="cpp1-symbol">!=</span><span class="cpp1-number">2</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">						</span><span class="cpp1-reservedword">switch</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">shape</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">j</span><span class="cpp1-symbol">][</span><span class="cpp1-identifier">i</span><span class="cpp1-symbol">])
</span><span class="cpp1-space">		        		</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">		    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-symbol">-</span><span class="cpp1-number">3</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&iexcl;&Aacute;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-symbol">-</span><span class="cpp1-number">2</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&iexcl;&ograve;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-symbol">-</span><span class="cpp1-number">1</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&iexcl;&eth;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">0</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;  &quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">1</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">2</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&acute;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">3</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&frac14;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">4</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">			        		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">5</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&ETH;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    	    		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">6</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&Egrave;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">			        		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">7</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&Oslash;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		        			</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">8</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&Agrave;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;</span><span class="cpp1-space">    
	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">9</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&agrave;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		        			</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">10</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&curren;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		        			</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">11</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		        			</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">12</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&iexcl;&uuml;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">13</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&iexcl;&yacute;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">14</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&iexcl;&ucirc;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">15</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&iexcl;&uacute;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        				</span><span class="cpp1-reservedword">default</span><span class="cpp1-symbol">:</span><span class="cpp1-identifier">printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&pound;&iquest;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        			</span><span class="cpp1-symbol">}</span><span class="cpp1-space">	
	        		</span><span class="cpp1-symbol">};
</span><span class="cpp1-space">	        		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	        	</span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">u</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">u</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">24</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">u</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	        		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&curren;&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;key_num:%d\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">key_num</span><span class="cpp1-symbol">);</span><span class="cpp1-space">	
				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&deg;&acute;K&middot;&micro;&raquo;&Oslash;&Ouml;&divide&sup2;&Euml;&micro;&yen;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">)</span><span class="cpp1-space">	</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">				
    			</span><span class="cpp1-comment">/*&iquest;&Oslash;&Ouml;&AElig;&Igrave;&uml;&ETH;&Aring;&Iuml;&cent;&Ecirc;&auml;&sup3;&ouml;&ordm;&macr;&Ecirc;&yacute;*/</span><span class="cpp1-space"> 
				</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">dbug</span><span class="cpp1-symbol">==</span><span class="cpp1-number">1</span><span class="cpp1-symbol">||</span><span class="cpp1-identifier">dbug</span><span class="cpp1-symbol">==</span><span class="cpp1-number">2</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">   				</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">					printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;char_a=%c\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">a</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">					printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;x=%-4d y=%-4d\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">x</span><span class="cpp1-symbol">+</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">y</span><span class="cpp1-symbol">+</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				    </span><span class="cpp1-reservedword">for</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">&lt;=</span><span class="cpp1-number">2</span><span class="cpp1-symbol">;</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">++)
</span><span class="cpp1-space">				    </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    			    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;object_%d_x=%-4d object_%d_y=%-4d\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">+</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">0</span><span class="cpp1-symbol">]+</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">+</span><span class="cpp1-number">1</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">object</span><span class="cpp1-symbol">[</span><span class="cpp1-identifier">io</span><span class="cpp1-symbol">][</span><span class="cpp1-number">1</span><span class="cpp1-symbol">]+</span><span class="cpp1-number">1</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				   	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">				   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;key_num:%d\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">key_num</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;key_n[]={%d,%d,%d}\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-number">0</span><span class="cpp1-symbol">],</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-number">1</span><span class="cpp1-symbol">],</span><span class="cpp1-identifier">key_n</span><span class="cpp1-symbol">[</span><span class="cpp1-number">2</span><span class="cpp1-symbol">]);
</span><span class="cpp1-space">				</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	
    	    	</span><span class="cpp1-comment">/*&sup1;&yacute;&sup1;&Oslash;&Aring;&ETH;¶¨*/
</span><span class="cpp1-space">    	    	</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">key_num</span><span class="cpp1-symbol">==</span><span class="cpp1-number">3</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">					win</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">					break_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">1</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">					</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">				</span><span class="cpp1-symbol">}</span><span class="cpp1-space"> 
				
				</span><span class="cpp1-comment">/*&Ecirc;&auml;&Egrave;&euml;&Auml;&pound;&iquest;&eacute;*/
</span><span class="cpp1-space">    	    	</span><span class="cpp1-comment">//scanf(&quot;%c&quot;,&amp;a);	
</span><span class="cpp1-space">				</span><span class="cpp1-comment">//a=getche();
</span><span class="cpp1-space">				</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">kbhit</span><span class="cpp1-symbol">())
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">		        	a</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">getch</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">	        		s_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	        	s_n</span><span class="cpp1-symbol">++;
</span><span class="cpp1-space">            </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">           	
			</span><span class="cpp1-comment">/*&Oacute;&Icirc;&Iuml;&middot;&Iacute;&Euml;&sup3;&ouml;&Auml;&pound;&iquest;&eacute;2*/
</span><span class="cpp1-space">    	    </span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">break_n</span><span class="cpp1-symbol">==</span><span class="cpp1-number">1</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    	    </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">    	   		break_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">				</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">			</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">            
            
			</span><span class="cpp1-reservedword">if</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">kbhit</span><span class="cpp1-symbol">())
</span><span class="cpp1-space">	        </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">		       	a</span><span class="cpp1-symbol">=</span><span class="cpp1-identifier">getch</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">	        	s_n</span><span class="cpp1-symbol">=</span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	        </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">        </span><span class="cpp1-symbol">}</span><span class="cpp1-space">        
    </span><span class="cpp1-symbol">}
}


</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> first</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">void</span><span class="cpp1-symbol">)
{
</span><span class="cpp1-space">    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;By Penxil\n&sup2;&Ugrave;&times;&divide&Euml;&micro;&Atilde;&divide&pound;&ordm;\n&deg;&acute;W&Iuml;&ograve;&Eacute;&Iuml;\n&deg;&acute;S&Iuml;&ograve;&Iuml;&Acirc;\n&deg;&acute;A&Iuml;&ograve;&times;&oacute;\n&deg;&acute;D&Iuml;&ograve;&Oacute;&Ograve;\n&deg;&acute;J&Egrave;&middot;¶¨\n&deg;&acute;K&middot;&micro;&raquo;&Oslash;\n&deg;&acute; 1/2 &micro;&divide&Oacute;&Atilde; &iquest;&Oslash;&Ouml;&AElig;&Igrave;&uml;/&Iacute;&ecirc;&Egrave;&laquo;&sup2;&acirc;&Ecirc;&Ocirc;&Auml;&pound;&Ecirc;&frac12;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);</span><span class="cpp1-space"> 
	system</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;pause&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	system</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;cls&quot;</span><span class="cpp1-symbol">);
}


</span><span class="cpp1-space"> </span><span class="cpp1-comment">/*&sup1;&Oslash;&Oacute;&Uacute;&frac12;&ccedil;&Atilde;&aelig;*/</span><span class="cpp1-space"> 
</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> about</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">void</span><span class="cpp1-symbol">)
{
</span><span class="cpp1-space">        printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;               &Acirc;&Oslash;&Ouml;&Ecirc;Penxil&Egrave;&Ugrave;&Oacute;&thorn;&frac34;&THORN;&Iuml;&times;                 &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;           Powered by Descartes Engine            &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	  	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;            &Oacute;&Eacute;&micro;&Ntilde;&iquest;&uml;¶û&Ograve;&yacute;&Ccedil;&aelig;&Igrave;&aacute;&sup1;&copy;&frac14;&frac14;&Ecirc;&otilde;&Ouml;&sect;&sup3;&Ouml;              &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                 Penx.com 2017                    &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                            v1.7.5&copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		getch</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">		system</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;cls&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		</span><span class="cpp1-reservedword">return</span><span class="cpp1-space"> </span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
}


</span><span class="cpp1-comment">/*&Euml;&micro;&Atilde;&divide&frac12;&ccedil;&Atilde;&aelig;*/
</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> talk</span><span class="cpp1-symbol">()
{
</span><span class="cpp1-space">        	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;          &sup2;&Ugrave;&times;&divide&Euml;&micro;&Atilde;&divide&pound;&ordm;                              &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;               &deg;&acute;W&Iuml;&ograve;&Eacute;&Iuml;                            &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;               &deg;&acute;S&Iuml;&ograve;&Iuml;&Acirc;                            &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;               &deg;&acute;A&Iuml;&ograve;&times;&oacute;                            &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;               &deg;&acute;D&Iuml;&ograve;&Oacute;&Ograve;                            &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;               &deg;&acute;J&Egrave;&middot;¶¨                            &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;               &deg;&acute;K&middot;&micro;&raquo;&Oslash;                            &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	  		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			getch</span><span class="cpp1-symbol">();
</span><span class="cpp1-space">			system</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;cls&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			</span><span class="cpp1-reservedword">return</span><span class="cpp1-space"> </span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
}

</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> win</span><span class="cpp1-symbol">()
{
</span><span class="cpp1-space">	    system</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;cls&quot;</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;    &copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;    &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;    &copy;&brvbar;  &Aring;¶£&shy;&Egrave;&raquo;¶ø&sup1;&yacute;&sup1;&Oslash;&Aacute;&Euml;&AElig;&auml;&Ecirc;&micro;&Ograve;&sup2;&Atilde;&raquo;&Ecirc;&sup2;&Atilde;&acute;&Aacute;&Euml;&sup2;&raquo;&AElig;&eth;&micro;&Auml;  &copy;&brvbar;    &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;    &copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;    &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	  	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                            &Ccedil;&euml;&deg;&acute;&Egrave;&Icirc;&Ograve;&acirc;&frac14;&uuml;&middot;&micro;&raquo;&Oslash;&Ouml;&divide&sup2;&Euml;&micro;&yen;  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		getch</span><span class="cpp1-symbol">();
}

</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> m_key</span><span class="cpp1-symbol">(</span><span class="cpp1-reservedword">int</span><span class="cpp1-space"> m_key_n</span><span class="cpp1-symbol">)
{
</span><span class="cpp1-space">	</span><span class="cpp1-reservedword">switch</span><span class="cpp1-symbol">(</span><span class="cpp1-identifier">m_key_n</span><span class="cpp1-symbol">)
</span><span class="cpp1-space">    </span><span class="cpp1-symbol">{
</span><span class="cpp1-space">	   	</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">1</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">			</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&brvbar;  &iquest;&ordf;  &Ecirc;&frac14;  &copy;&brvbar;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &sup1;&Oslash;  &Oacute;&Uacute;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &Euml;&micro;  &Atilde;&divide                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &Iacute;&Euml;  &sup3;&ouml;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			   	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		   		</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		   	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">2</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">		   	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &iquest;&ordf;  &Ecirc;&frac14;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&brvbar;  &sup1;&Oslash;  &Oacute;&Uacute;  &copy;&brvbar;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &Euml;&micro;  &Atilde;&divide                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &Iacute;&Euml;  &sup3;&ouml;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			  	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">		</span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">3</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &iquest;&ordf;  &Ecirc;&frac14;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &sup1;&Oslash;  &Oacute;&Uacute;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&brvbar;  &Euml;&micro;  &Atilde;&divide  &copy;&brvbar;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &Iacute;&Euml;  &sup3;&ouml;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">				printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">		    </span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	    </span><span class="cpp1-reservedword">case</span><span class="cpp1-space"> </span><span class="cpp1-number">4</span><span class="cpp1-symbol">:
</span><span class="cpp1-space">	    	</span><span class="cpp1-symbol">{
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &iquest;&ordf;  &Ecirc;&frac14;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &sup1;&Oslash;  &Oacute;&Uacute;                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">			    printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                      &Euml;&micro;  &Atilde;&divide                      &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&deg;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&acute;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&brvbar;  &Iacute;&Euml;  &sup3;&ouml;  &copy;&brvbar;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                  &copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">		    	printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">    			printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&brvbar;                                                  &copy;&brvbar;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		printf</span><span class="cpp1-symbol">(</span><span class="cpp1-string">&quot;&copy;&cedil;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&curren;&copy;&frac14;\n&quot;</span><span class="cpp1-symbol">,</span><span class="cpp1-number">0</span><span class="cpp1-symbol">);
</span><span class="cpp1-space">	    		</span><span class="cpp1-reservedword">break</span><span class="cpp1-symbol">;
</span><span class="cpp1-space">	    	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	</span><span class="cpp1-symbol">}
</span><span class="cpp1-space">	</span><span class="cpp1-reservedword">return</span><span class="cpp1-space"> </span><span class="cpp1-number">0</span><span class="cpp1-symbol">;
}





</span><span class="cpp1-comment">/*
&copy;&deg;&copy;&curren;&copy;&ETH;&copy;&curren;&copy;&ETH;&copy;&curren;&copy;&ETH;&copy;&curren;&copy;&acute;
&copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar; 
&copy;&Agrave;&copy;&curren;&copy;&agrave;&copy;&curren;&copy;&agrave;&copy;&curren;&copy;&agrave;&copy;&curren;&copy;&Egrave;
&copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;
&copy;&Agrave;&copy;&curren;&copy;&agrave;&copy;&curren;&copy;&agrave;&copy;&curren;&copy;&agrave;&copy;&curren;&copy;&Egrave;
&copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;  &copy;&brvbar;
&copy;&cedil;&copy;&curren;&copy;&Oslash;&copy;&curren;&copy;&Oslash;&copy;&curren;&copy;&Oslash;&copy;&curren;&copy;&frac14;
*/</span><span class="cpp1-space"> 
</span></span>
</code></pre>
</body>
</html>